package sharoyko.Task_02;

public class Task_02_2 {

    public static void main(String[] args) {

        //создаем новый объект нашего класса
        FIFO a = new FIFO();

        //тестируем методы
        //добавляем 5 элементов в очередь от 1 до 5
        a.In(1);
        a.In(2);
        a.In(3);
        a.In(4);
        a.In(5);

        //изымаем 3 элемента из очереди (должны изъятся числа от 1 до 3 включительно)
        a.Out();
        a.Out();
        a.Out();

        //выводим на экран всю очередь (убеждаемся что в очереди остались числа 4 и 5)
        a.getFifo();

        //добавляем в очередь число 10
        a.In(10);

        ////выводим на экран всю очередь (убеждаемся что 10 добавлено в очередь)
        a.getFifo();
    }
}


class FIFO {

    //размер "Очереди"
    int value = 5;

    //атрибут хранящий значение головы очереди (начало очереди)
    int head = 0;

    //атрибут хранящий значение хвоста (конец очереди)
    int tail = 0;

    //атрибут хранящий количество элементов очереди
    int elems = 0;

    //массив "Очереди"
    int[] arrFIFO = new int[value];

    //вкладываем новый элемент в очередь
    public void In(int x) {
        //проверяем не полна ли очередь
        if (isFull() == false) {
            //проверяем пусто ли в очереди или в ней есть ходя бы один елемент
            //если полностью пусто - добавляем элемент в очередь и увеличиваем количество значения элементов
            if (isEmpty() == true) {
                arrFIFO[tail] = x;
                elems++;
                //если есть хотя бы один элемент, то помимо предудыщего комментария, так же увеличиваем значение Хвоста +1
            } else {
                tail++;
                arrFIFO[tail] = x;
                elems++;
            }
        } else {
            System.out.println("Нельзя добавить елемент, очередь полна.");
        }
    }

    //извлекаем элемент с головы очереди
    public void Out() {
        //проверяем не пуста ли очередь
        //если очередь пуста, то ничего изъять нельзя
        if (isEmpty()) {
            System.out.println("Нельзя изъять елемент, очередь пуста.");
        } else {
            //иначе указываем элемент который был изъят
            System.out.println("Елемент изъят: " + arrFIFO[head]);
            //сдвигаем все значения на единицу ближе к голове
            for (int i = 0; i < arrFIFO.length; i++) {
                arrFIFO[i] = 0;
                //если индекс места в очереди по которому находится элемент равен (Величина очереди - 1) то ничего не делаем
                if (i == value - 1) {
                    //иначе сдвигаем на едицину влево все значения (ближе к голове)
                } else {
                    arrFIFO[i] = arrFIFO[i + 1];
                }
            }
            //уменьшаем количество элементов и значение хвоста на единицу
            elems--;
            tail--;
        }
    }

    //проверяем пуста ли очередь, если количество элементов 0, то пуста
    public boolean isEmpty() {
        if (elems == 0) {
            return true;
        } else {
            return false;
        }
    }

    //проверяем полна ли очередь, если значение Хвост + одна ячейка равна размеру очереди - очередь полна
    public boolean isFull() {
        if (tail + 1 == value) {
            return true;
        } else {
            return false;
        }
    }

    //выводим очередь на экран, в конце указываем количество свободных мест
    public void getFifo() {
        for (int i = 0; i < value; i++) {
            System.out.println(arrFIFO[i]);
        }
        System.out.println("Оставшихся пустых мест в очереди " + (value - elems));
    }
}
